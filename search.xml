<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux Shell命令</title>
    <url>/myselfblog/2023/04/21/Shell/</url>
    <content><![CDATA[<p>查看IP地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure>

<p>查看nginx进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure>

<p>查看所有进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -elf</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps</span><br></pre></td></tr></table></figure>

<p>删除进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kill -9 PID</span><br></pre></td></tr></table></figure>

<p>删除文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -r xxx.xx</span><br></pre></td></tr></table></figure>

<p>删除文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rmdir xxx.xx</span><br></pre></td></tr></table></figure>

<p>建立文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir xxx.xx</span><br></pre></td></tr></table></figure>

<p>文件改名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv vvv.vv xxx.xx</span><br></pre></td></tr></table></figure>

<p>移动文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv vvv.vv xxx.xx/</span><br></pre></td></tr></table></figure>

<p>解压tar.gz</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf xxx.tar.gz</span><br></pre></td></tr></table></figure>

<p>解压zip文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unzip xxx.zip</span><br></pre></td></tr></table></figure>

<p>文件内容查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat xxx.xx</span><br></pre></td></tr></table></figure>

<p>查找文件位置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find -name xxx.conf</span><br></pre></td></tr></table></figure>

<p>程序转到后台运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bg</span><br></pre></td></tr></table></figure>

<p>将运行程序转为前台</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fg</span><br></pre></td></tr></table></figure>

<p>查看端口占用进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsof -i:8000</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -tunlp | grep 8000</span><br></pre></td></tr></table></figure>

<p>查看所有端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -anp</span><br></pre></td></tr></table></figure>

<p>网络请求命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl http://192.168.1.197:8000</span><br></pre></td></tr></table></figure>

<p>查看当前目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pwd</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>GIT命令</title>
    <url>/myselfblog/2023/04/21/git/</url>
    <content><![CDATA[<p>克隆仓库会在执行命令文件夹下新建仓库文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone git@gitee.com:用户名/仓库名.git</span><br></pre></td></tr></table></figure>

<p>仓库提交命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;操作目的&quot;</span><br><span class="line">git push origin（本地分支） 仓库分支</span><br></pre></td></tr></table></figure>

<p>仓库ssh生成命令，生成后在c/Usr/用户名/.ssh/id_rsa.pub文件中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen –t rsa –C &quot;git仓库邮箱&quot;</span><br></pre></td></tr></table></figure>

<p>配置仓库本地用户名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;git用户名&quot;</span><br></pre></td></tr></table></figure>

<p>配置仓库本地邮箱</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;git登录邮箱&quot;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Linux 防火墙命令</title>
    <url>/myselfblog/2023/04/21/firewall/</url>
    <content><![CDATA[<p>查看防火墙状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure>

<p>防火墙添加端口</p>
<p>–permanent为永久开启，不加服务器重启失效。也可以是一个端口范围1000-2000</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8000/tcp --permanent</span><br></pre></td></tr></table></figure>

<p>重启防火墙（重启载入，更新配置）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>查询某个端口是否开放</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --query-port=8000/tcp</span><br></pre></td></tr></table></figure>

<p>查询已经开放的端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --list-ports</span><br></pre></td></tr></table></figure>

<p>只允许192.168.1.147访问8000端口，删除则将add改为remove即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.1.147&quot; port protocol=&quot;tcp&quot; port=&quot;8000&quot; accept&quot;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/myselfblog/2023/04/14/hello-world/</url>
    <content><![CDATA[<p>下方是分隔符</p>
<hr>
<hr>
<img src="/myselfblog/2023/04/14/hello-world/test-img.jpg" class title="testimg">

<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>你好</category>
      </categories>
      <tags>
        <tag>Hello-world</tag>
      </tags>
  </entry>
  <entry>
    <title>软件工具</title>
    <url>/myselfblog/2023/04/25/softwareTool/</url>
    <content><![CDATA[<h5 id="压缩软件："><a href="#压缩软件：" class="headerlink" title="压缩软件："></a>压缩软件：</h5><ul>
<li>7-zip</li>
</ul>
<h5 id="视频格式转换器："><a href="#视频格式转换器：" class="headerlink" title="视频格式转换器："></a>视频格式转换器：</h5><ul>
<li>狸窝全能视频转换器</li>
</ul>
<h5 id="录屏软件："><a href="#录屏软件：" class="headerlink" title="录屏软件："></a>录屏软件：</h5><ul>
<li>OBS Studio：专业主播录屏软件</li>
</ul>
<h5 id="PDF编辑软件："><a href="#PDF编辑软件：" class="headerlink" title="PDF编辑软件："></a>PDF编辑软件：</h5><ul>
<li>Adobe Acrobat DC </li>
<li>office lens：手机使用软件</li>
</ul>
<h5 id="安全软件："><a href="#安全软件：" class="headerlink" title="安全软件："></a>安全软件：</h5><ul>
<li>火绒</li>
<li>电脑管家</li>
</ul>
<h5 id="服务器文件管理软件："><a href="#服务器文件管理软件：" class="headerlink" title="服务器文件管理软件："></a>服务器文件管理软件：</h5><ul>
<li>WinSCP：连接服务器后可视化上传文件</li>
</ul>
<h5 id="服务器shell命令软件："><a href="#服务器shell命令软件：" class="headerlink" title="服务器shell命令软件："></a>服务器shell命令软件：</h5><ul>
<li>Xshell</li>
</ul>
<h5 id="文本编辑器："><a href="#文本编辑器：" class="headerlink" title="文本编辑器："></a>文本编辑器：</h5><ul>
<li>Typore：makedown文件编辑器</li>
<li>Notepad++：可列选择</li>
</ul>
<h5 id="3D画图软件："><a href="#3D画图软件：" class="headerlink" title="3D画图软件："></a>3D画图软件：</h5><ul>
<li>FreeCAD</li>
</ul>
<h5 id="翻墙软件："><a href="#翻墙软件：" class="headerlink" title="翻墙软件："></a>翻墙软件：</h5><ul>
<li><a href="https://www.astrill.com/">Astrill</a></li>
<li><a href="https://github.com/getlantern">蓝灯</a></li>
</ul>
<h5 id="音频处理软件："><a href="#音频处理软件：" class="headerlink" title="音频处理软件："></a>音频处理软件：</h5><ul>
<li><a href="https://ffmpeg.org/">FFmpeg</a></li>
</ul>
<h5 id="思维导图软件："><a href="#思维导图软件：" class="headerlink" title="思维导图软件："></a>思维导图软件：</h5><ul>
<li><a href="https://xmind.cn/">Xmind</a></li>
</ul>
<h5 id="modbus-TCP-UDP协议解析软件："><a href="#modbus-TCP-UDP协议解析软件：" class="headerlink" title="modbus TCP/UDP协议解析软件："></a>modbus TCP/UDP协议解析软件：</h5><ul>
<li>MODBUS Poll</li>
<li>MODBUS slave</li>
</ul>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx</title>
    <url>/myselfblog/2023/04/21/nginx/</url>
    <content><![CDATA[<p>Nginx是一个高性能的Http和反向代理服务器，处理高并发能力强，占用内存少 有以下3点作用 </p>
<p>反向代理：   用户发请求给反向代理服务器，反向代理服务器发请求给真正的服务器，真正的服务器把数据返回给反向代理服务器，反向代理服务器再把数据返回给用户，代理的是服务端；   不使用反向代理，服务端的端口会暴露在客户端，用反向代理把真是地址隐藏起来保证安全性；  反向代理服务器接受请求，再用负载均衡将请求分布给多个服务器。能提高效率 </p>
<p>负载均衡：将多个请求均匀的分布到多台服务器上，减轻每台服务器的压力，提高服务的吞吐量</p>
<p>动静分离：可以用作静态文件的缓存服务器，动态页面和静态页面分别由不同的服务器解析，提高访问速度 </p>
<p>正向代理：用户发送请求到自己的代理服务器，自己的代理服务器发送请求到服务器，服务器将数据返回到自己的代理服务器，自己的代理服务器再将数据返回给用户，代理的是客户端，把用户隐藏起来</p>
<p>每次nginx.conf文件编辑后均需要执行 ./usr/local/nginx/sbin/nginx -s reload 进行nginx服务重启才可生效</p>
<p>启动nginx失败时现杀死对应进程 kill -9 xxxx，之后即可启动服务</p>
<p>在nginx启动时要配置相应模块，在解压文件中执行./configure时后面跟着对应模块。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module</span><br></pre></td></tr></table></figure>

<h3 id="nginx-conf文件说明"><a href="#nginx-conf文件说明" class="headerlink" title="nginx.conf文件说明"></a>nginx.conf文件说明</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80 ssl; #监听端口，ssl为访问https时使用，http不用</span><br><span class="line">        server_name  localhost; #访问域名或ip</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location /hello/ &#123; #其中hello为xxx.xx/hello/</span><br><span class="line">            proxy_pass http://192.168.1.197:8000/; #跳转目标地址</span><br><span class="line">            #root   html; #显示文件所处位置</span><br><span class="line">            #index  index.html index.htm; #显示的文件</span><br><span class="line">        &#125;</span><br><span class="line">	#ssl_certificate	      /usr/local/nginx/ssl/9080124_www.joytrip.vip.pem; #ssl证书配置</span><br><span class="line">	#ssl_certificate_key   /usr/local/nginx/ssl/9080124_www.joytrip.vip.key; #ssl证书配置</span><br><span class="line">	location /wx/ &#123;</span><br><span class="line">	    proxy_pass https://www.joytrip.vip:30881/boy.png/;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>端口访问前提时防火墙开放端口。firewall-cmd –list–all查看已开发端口</p>
<p>重写（rewrite）与重定向（return）区别：共同作用是通知客户端请求的资源位于其他位置。目标链接均会显示在浏览器地址框。return比rewrite更方便，可以设置返回状态码；rewrite更全面，可以使用正则表达式但仅有临时与永久两种状态。</p>
<h3 id="Nginx重定向配置"><a href="#Nginx重定向配置" class="headerlink" title="Nginx重定向配置"></a>Nginx重定向配置</h3><ul>
<li>301永久重定向</li>
<li>302临时重定向</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">		listen 		80;</span><br><span class="line">		#多域名重定向</span><br><span class="line">		server_name	joytrip.vip 4rg.cn;</span><br><span class="line">		return  302  https://$http_host$request_uri;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Nginx反向代理"><a href="#Nginx反向代理" class="headerlink" title="Nginx反向代理"></a>Nginx反向代理</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 反向代理配置</span><br><span class="line">upstream server_list&#123;</span><br><span class="line">	# 这个是tomcat的访问路径</span><br><span class="line">	server localhost:9001;</span><br><span class="line">	server localhost:9002;</span><br><span class="line">	server localhost:9003;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">	listen       30880;</span><br><span class="line">	server_name  localhost;</span><br><span class="line"></span><br><span class="line">	location / &#123;</span><br><span class="line">		proxy_pass http://server_list;</span><br><span class="line">		#反向代理一条链接时可选用下方方式跳转</span><br><span class="line">		#proxy_pass http://localhost:9001;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">    	root   html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Nginx重写"><a href="#Nginx重写" class="headerlink" title="Nginx重写"></a>Nginx重写</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">		listen 	80;</span><br><span class="line">		server_name  localhost;	</span><br><span class="line">		#rewrite ^ https://joytrip.vip/wx/boy.png;</span><br><span class="line">		rewrite ^ https://jytrp.com$request_uri;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Nginx重启命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
